1a)


Stack:                            Heap:                    
                                
                        
                        |c| -------->   |2|4|7|8|10|12|        
                                
                                
                        |b| ----------------
                                            |
                                            V
                        |a| -------->   |2|4|12|8|10|12|
                        
                        
1b)12 12 7                        

==================================================================

2a)
public static boolean isSorted(int[] arr) {
    if (arr == null) {
        throw new IllegalArgumentException("argument value cannot be null");    
    }
    for (int i = 1; i < arr.length; i++) {
        if (arr[i - 1] > arr[i]) {
            return false;
        }
    }
    return true;
}
    
2b)
public static int mostFrequentValue(int[] arr) {
    int mostFreqNum = 0;
    int mostFreqNumOccur = 0;
    int curValNumOccur = 0;
    
    for (int i = 0; i < arr.length; i++) {
        if (i > 0 && arr[i] >  arr[i-1]) {
            curValNumOccur = 0;
        }
        curValNumOccur++;
        if (curValNumOccur > mostFreqNumOccur) {
            mostFreqNumOccur++;
            mostFreqNum = arr[i];
        }
    }
    
    return mostFreqNum;
}

==================================================================

3a)
main calls mystery(20, 6)
	mystery(20, 6) calls mystery(14, 6)
		mystery(14, 6) calls mystery(8, 6)
			mystery(8, 6) calls mystery(2, 6)
				mystery(2, 6) calls mystery(-4, 6)
					mystery(-4, 6) returns 1
				mystery(2, 6) returns 2 + 1 or 3
			mystery(8, 6) returns 2 + 3 or 5
		mystery(14, 6) returns 2 + 5 or 7
	mystery(20, 6) returns 2 + 7 or 9
main()

3b)
9

3c)
6